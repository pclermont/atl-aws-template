{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Atlassian Solution Template",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Atlassian setup"
          },
          "Parameters": [
            "AtlassianProduct",
            "Version"
          ]
        },
        {
          "Label": {
            "default": "Cluster nodes"
          },
          "Parameters": [
            "ClusterNodeInstanceType",
            "ClusterNodeMin",
            "ClusterNodeMax"
          ]
        },
        {
          "Label": {
            "default": "Database"
          },
          "Parameters": [
            "DBMasterUserPassword",
            "DBPassword"
          ]
        },
        {
          "Label": {
            "default": "Networking"
          },
          "Parameters": [
            "VPC",
            "Subnets",
            "KeyName",
            "CustomDnsName",
            "SSLCertificateId"
          ]
        },
        {
          "Label": {
            "default": "Advanced (Optional)"
          },
          "Parameters": [
            "CatalinaOpts",
            "JVMMinimumMemory",
            "JVMMaximumMemory"
          ]
        }
      ],
      "ParameterLabels": {
        "CatalinaOpts": {
          "default": "Catalina options"
        },
        "JVMMinimumMemory": {
          "default": "JVM Minimum Memory in megs"
        },
        "JVMMaximumMemory": {
          "default": "JVM Maximum Memory in megs"
        },
        "ClusterNodeMax": {
          "default": "Maximum number of cluster nodes"
        },
        "ClusterNodeMin": {
          "default": "Minimum number of cluster nodes"
        },
        "ClusterNodeInstanceType": {
          "default": "Atlassian cluster node instance type"
        },
        "DBMasterUserPassword": {
          "default": "Master password *"
        },
        "DBPassword": {
          "default": "Atlassian user database password *"
        },
        "AtlassianProduct": {
          "default": "Atlassian Product"
        },
        "KeyName": {
          "default": "Key Name *"
        },
        "CustomDnsName": {
          "default": "Existing DNS name (optional)"
        },
        "SSLCertificateId": {
          "default": "SSL Certificate Id"
        },
        "Subnets": {
          "default": "Subnets *"
        },
        "VPC": {
          "default": "VPC *"
        }
      }
    }
  },
  "Parameters": {
    "AMIid": {
      "Type": "AWS::EC2::Image::Id"
    },
    "EnvironmentName": {
      "AllowedValues": [
        "dv",
        "it",
        "ut",
        "pr",
        "np"
      ],
      "Description": "Environment name (dv, it, ut, pr, np)",
      "Type": "String"
    },
    "StackId": {
      "Description": "Stack id",
      "Type": "String",
      "ConstraintDescription": "Stack id"
    },
    "DBEndpointExport": {
      "Type": "String",
      "Default": ""
    },
    "DBPortExport": {
      "Type": "String",
      "Default": ""
    },
    "DBSecurityGroupExport": {
      "Type": "String",
      "Default": ""
    },
    "ClusterNodeMax": {
      "Type": "Number",
      "Default": "1"
    },
    "ClusterNodeMin": {
      "Type": "Number",
      "Default": "1"
    },
    "ClusterNodeInstanceType": {
      "Type": "String",
      "Default": "c4.xlarge",
      "AllowedValues": [
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "c5.2xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "x1.32xlarge"
      ],
      "ConstraintDescription": "Must be an EC2 instance type in the C3, I2, R3, or X1 family, 'xlarge' or larger",
      "Description": "Instance type for the cluster nodes."
    },
    "CatalinaOpts": {
      "Type": "String",
      "Default": ""
    },
    "EFSIP": {
      "Type": "String",
      "Default": ""
    },
    "EFSSecurityGroupExport": {
      "Type": "String",
      "Default": ""
    },
    "JVMMinimumMemory": {
      "Type": "Number",
      "Default": 384
    },
    "JVMMaximumMemory": {
      "Type": "Number",
      "Default": 768
    },
    "Version": {
      "Type": "String",
      "AllowedPattern": "(\\d+\\.\\d+\\.\\d+(-?.*))",
      "Default": "0.0.0"
    },
    "DBMasterUserPassword": {
      "NoEcho": "true",
      "Default": "",
      "Description": "Database admin account password.",
      "Type": "String",
      "MaxLength": "41",
      "AllowedPattern": "[a-zA-Z0-9]*",
      "ConstraintDescription": "Must be at least 8 alphanumeric characters."
    },
    "DBPassword": {
      "Default": "",
      "Description": "Database user account password.",
      "Type": "String",
      "MaxLength": "41",
      "AllowedPattern": "[a-zA-Z0-9]*",
      "ConstraintDescription": "Must contain only alphanumeric characters.",
      "NoEcho": "true"
    },
    "AtlassianProduct": {
      "Description": "The Atlassian Product to install.",
      "Type": "String",
      "ConstraintDescription": "Must be \"Jira\", \"Bitbucket\", or \"Confluence\"",
      "AllowedValues": [
        "Jira",
        "Bitbucket",
        "Confluence"
      ]
    },
    "KeyName": {
      "Description": "The EC2 Key Pair to allow SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "Must be the name of an existing EC2 Key Pair."
    },
    "CustomDnsName": {
      "Description": "Use custom existing DNS name for your JIRA Data Center instance. Please note: you must own the domain and configure it to point at the load balancer.",
      "Type": "String"
    },
    "SSLCertificateId": {
      "Description": "The Id of your Server Certificate to use for HTTPS.  Leave blank if you don't want to set up HTTPS at this time",
      "Type": "String",
      "MinLength": "0",
      "MaxLength": "64",
      "Default": ""
    },
    "Subnets": {
      "Description": "Subnets (two or more) where your cluster nodes and other internal infrastructure will be deployed. MUST be within the selected VPC.",
      "Type": "List<AWS::EC2::Subnet::Id>",
      "ConstraintDescription": "Must be a list of two or more Subnet ID's within the selected VPC."
    },
    "VPC": {
      "Description": "Virtual Private Cloud",
      "Type": "AWS::EC2::VPC::Id",
      "ConstraintDescription": "Must be the ID of a VPC."
    },
    "AdminNetwork": {
      "Description": "CIDR for administrative access ",
      "Type": "String",
      "ConstraintDescription": "Must be a valid cidr network range",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "Default": "10.0.0.0/8"
    },
    "SSLKeystore": {
      "Description": "Keystore file name",
      "Type": "String"
    },
    "SSLKeystorePassword": {
      "Description": "Keystore password",
      "Type": "String",
      "NoEcho": "true"
    },
    "SSLKeystoreBucket": {
      "Description": "Bucket where the SSL keystore is located",
      "Type": "String"
    }
  },
  "Conditions": {
    "DoSetDBMasterUserPassword": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "DBMasterUserPassword"
            },
            ""
          ]
        }
      ]
    },
    "UseCustomDnsName": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "CustomDnsName"
            },
            ""
          ]
        }
      ]
    },
    "DoSSL": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "SSLCertificateId"
            },
            ""
          ]
        }
      ]
    },
    "JiraProduct": {
      "Fn::Equals": [
        {
          "Ref": "AtlassianProduct"
        },
        "Jira"
      ]
    },
    "ConfluenceProduct": {
      "Fn::Equals": [
        {
          "Ref": "AtlassianProduct"
        },
        "Confluence"
      ]
    },
    "BitbucketProduct": {
      "Fn::Equals": [
        {
          "Ref": "AtlassianProduct"
        },
        "Bitbucket"
      ]
    },
    "NotJiraProduct": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "AtlassianProduct"
            },
            "Jira"
          ]
        }
      ]
    },
    "NotConfluenceProduct": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "AtlassianProduct"
            },
            "Confluence"
          ]
        }
      ]
    },
    "NotBitbucketProduct": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "AtlassianProduct"
            },
            "Bitbucket"
          ]
        }
      ]
    }
  },
  "Mappings": {
    "EnvironmentLookups": {
      "EnvNameToPretty": {
        "dv": "Dev",
        "it": "Int",
        "np": "NonPrd",
        "pr": "Prd",
        "ua": "UAT"
      }
    },
    "ProductNameLowerCase": {
      "Product": {
        "Jira": "jira",
        "Confluence": "confluence",
        "Bitbucket": "bitbucket"
      }
    }
  },
  "Resources": {
    "ClusterNodeGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "DesiredCapacity": {
          "Ref": "ClusterNodeMin"
        },
        "LaunchConfigurationName": {
          "Ref": "ClusterNodeLaunchConfig"
        },
        "MaxSize": {
          "Ref": "ClusterNodeMax"
        },
        "MinSize": {
          "Ref": "ClusterNodeMin"
        },
        "TargetGroupARNs": [
          {
            "Fn::If": [
              "BitbucketProduct",
              {
                "Ref": "AWS::NoValue"
              },
              {
                "Ref": "MainTargetGroup"
              }
            ]
          }
        ],
        "LoadBalancerNames": [
          {
            "Fn::If": [
              "BitbucketProduct",
                            {
                "Ref": "LoadBalancer"
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          }
        ],
        "VPCZoneIdentifier": {
          "Ref": "Subnets"
        },
        "Tags": [
          {
            "Key": "Cluster",
            "Value": {
              "Ref": "AWS::StackName"
            },
            "PropagateAtLaunch": true
          },
          {
            "Key": "application",
            "Value": {
              "Ref": "AtlassianProduct"
            },
            "PropagateAtLaunch": true
          },
          {
            "Key": "environment",
            "Value": {
              "Fn::FindInMap": [
                "EnvironmentLookups",
                "EnvNameToPretty",
                {
                  "Ref": "EnvironmentName"
                }
              ]
            },
            "PropagateAtLaunch": true
          },
          {
            "Key": "MonitoringProfile",
            "Value": {
              "Ref": "AtlassianProduct"
            },
            "PropagateAtLaunch": true
          },
          {
            "Key": "ConsistentSnapshots",
            "Value": "enabled",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "EnvironmentName"
                  },
                  {
                    "Fn::FindInMap": [
                      "ProductNameLowerCase",
                      "Product",
                      {
                        "Ref": "AtlassianProduct"
                      }
                    ]
                  },
                  {
                    "Ref": "StackId"
                  }
                ]
              ]
            },
            "PropagateAtLaunch": true
          },
          {
            "Key": "stackId",
            "Value": {
              "Ref": "StackId"
            },
            "PropagateAtLaunch": true
          }
        ]
      }
    },
    "ClusterNodeLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Metadata": {
        "Comment": "",
        "AWS::CloudFormation::Init": {
          "configSets": {
            "default": [
              "install",
              "common",
              {
                "Ref": "AtlassianProduct"
              },
              "startservices"
            ]
          },
          "install": {
            "files": {
              "/etc/sysconfig/atl": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "ATL_LOG=/var/log/atl.log",
                      "ATL_STANDALONE_MODE=true",
                      "ATL_APP_DATA_MOUNT_ENABLED=true",
                      "ATL_APP_DATA_BLOCK_DEVICE=/dev/xvdf",
                      "ATL_APP_DATA_MOUNT=\"/media/atl\"",
                      "ATL_APP_DATA_DIR=\"/var/atlassian/application-data\"",
                      "ATL_APP_DATA_FS_TYPE=\"zfs\"",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_JVM_MINIMUM_MEMORY=\"",
                            {
                              "Ref": "JVMMinimumMemory"
                            },
                            "m\""
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_JVM_MAXIMUM_MEMORY=\"",
                            {
                              "Ref": "JVMMaximumMemory"
                            },
                            "m\""
                          ]
                        ]
                      },
                      "ATL_INSTANCE_STORE_BLOCK_DEVICE=\"/dev/xvdb\"",
                      "ATL_INSTANCE_STORE_MOUNT=\"/media/ephemeral0\"",
                      "ATL_APP_NFS_SERVER=false",
                      "ATL_RELEASE_S3_BUCKET=atlassian-software",
                      "ATL_RELEASE_S3_PATH=\"releases\"",
                      "ATL_HOST_NAME=",
                      "ATL_POSTGRES_ENABLED=true",
                      "ATL_NGINX_ENABLED=false",
                      "ATL_SSL_SELF_CERT_ENABLED=false",
                      "ATL_SSL_SELF_CERT_COUNTRY=US",
                      "ATL_SSL_SELF_CERT_STATE=CA",
                      "ATL_SSL_SELF_CERT_LOCALE=\"San Francisco\"",
                      "ATL_SSL_SELF_CERT_ORG=\"An Atlassian Customer\"",
                      "ATL_SSL_SELF_CERT_ORG_UNIT=\"An Atlassian Customer's Team\"",
                      "ATL_SSL_SELF_CERT_EMAIL_ADDRESS=sales@atlassian.com",
                      "ATL_SSL_SELF_CERT_PATH=/etc/nginx/ssl/self-ssl.crt",
                      "ATL_SSL_SELF_CERT_KEY_PATH=/etc/nginx/ssl/self-ssl.key"
                    ]
                  ]
                }
              }
            },
            "packages": {
              "yum": {
                "nginx": [],
                "nfs-utils": [],
                "python-daemon": []
              }
            }
          },
          "common": {
            "files": {
              "/etc/cfn/cfn-hup.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[main]\n",
                      "stack=",
                      {
                        "Ref": "AWS::StackId"
                      },
                      "\n",
                      "region=",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                },
                "mode": "000400",
                "owner": "root",
                "group": "root"
              },
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update\n",
                      "path=Resources.ClusterNodeLaunchConfig.Metadata.AWS::CloudFormation::Init\n",
                      "action=/opt/aws/bin/cfn-init -v ",
                      "         --stack ",
                      {
                        "Ref": "AWS::StackName"
                      },
                      "         --resource ClusterNodeLaunchConfig ",
                      "         --region ",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n",
                      "runas=root\n"
                    ]
                  ]
                }
              }
            },
            "commands": {
              "001_hostnamectl": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "hostnamectl set-hostname ",
                      {
                        "Ref": "EnvironmentName"
                      },
                      "-",
                      {
                        "Fn::FindInMap": [
                          "ProductNameLowerCase",
                          "Product",
                          {
                            "Ref": "AtlassianProduct"
                          }
                        ]
                      },
                      "-",
                      {
                        "Ref": "StackId"
                      }
                    ]
                  ]
                },
                "ignoreErrors": "false"
              },
              "002_chef": {
                "command": "chef-client -o recipe[ff_linux_base_wrapper::launch] -c /var/chef/solo.rb -z",
                "ignoreErrors": "false"
              },
              "008_yum_update": {
                "command": "yum -y update",
                "ignoreErrors": "false"
              },
              "010_make_mount_point": {
                "command": "mkdir -p /media/atl",
                "ignoreErrors": "false"
              },
              "020_add_nfs_mount": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "echo ",
                      {
                        "Ref": "EFSIP"
                      },
                      ":/ /media/atl nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 0 0 >>/etc/fstab"
                    ]
                  ]
                },
                "ignoreErrors": "false"
              },
              "030_mount_all": {
                "command": "mount -a",
                "ignoreErrors": "false"
              },
              "050_remove_java_openjdk": {
                "command": "yum -y remove java-1.7.0-openjdk.x86_64",
                "ignoreErrors": "false"
              },
              "060_install_jq": {
                "command": "yum -y install jq",
                "ignoreErrors": "false"
              },
              "070_fetch_atlassian_functions": {
                "command": "curl https://raw.githubusercontent.com/pclermont/atl-aws-template/master/init.d/atl-functions >> /tmp/atl-functions",
                "ignoreErrors": "false"
              },
              "071_move_atlassian_functions": {
                "command": "mv /tmp/atl-functions /etc/init.d/atl-functions && sudo chown root:root /etc/init.d/atl-functions",
                "ignoreErrors": "false"
              },
              "080_fetch_update_hostname_script": {
                "command": "curl https://raw.githubusercontent.com/pclermont/atl-aws-template/master/bin/atl-update-host-name.sh -o /tmp/atl-update-host-name.sh",
                "ignoreErrors": "false"
              },
              "081_move_hostname_script": {
                "command": "mkdir -p /opt/atlassian/bin && sudo mv /tmp/atl-update-host-name.sh /opt/atlassian/bin/atl-update-host-name.sh && sudo chmod +x /opt/atlassian/bin/atl-update-host-name.sh && sudo chown root:root /opt/atlassian/bin/atl-update-host-name.sh",
                "ignoreErrors": "false"
              },
              "090_fetch_init_volumes": {
                "command": "curl https://raw.githubusercontent.com/pclermont/atl-aws-template/master/init.d/atl-init-10-volume.sh >> /tmp/atl-init-10-volume",
                "ignoreErrors": "false"
              },
              "100_fetch_init_instance_store": {
                "command": "curl https://raw.githubusercontent.com/pclermont/atl-aws-template/master/init.d/atl-init-20-instance-store.sh >> /tmp/atl-init-20-instance-store",
                "ignoreErrors": "false"
              },
              "110_fetch_init_products": {
                "command": "curl https://raw.githubusercontent.com/pclermont/atl-aws-template/master/init.d/atl-init-40-products.sh >> /tmp/atl-init-40-products",
                "ignoreErrors": "false"
              },
              "120_mv_init_scripts": {
                "command": "sudo chown root:root /tmp/atl-init-* && sudo chmod 755 /tmp/atl-init-* && mv /tmp/atl-init-* /etc/init.d/",
                "ignoreErrors": "false"
              }
            },
            "services": {
              "sysvinit": {
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "/etc/cfn/cfn-hup.conf",
                    "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                  ]
                },
                "rpcbind": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "packages": {
                    "yum": [
                      "nfs-utils"
                    ]
                  }
                }
              }
            },
            "packages": {
              "yum": {
                "postgresql": []
              }
            }
          },
          "Jira": {
            "files": {
              "/etc/atl": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "ATL_APP_DATA_MOUNT_ENABLED=false",
                      "ATL_DB_NAME=atljira",
                      "ATL_DB_USER=atljira",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_DB_PASSWORD=",
                            {
                              "Ref": "DBMasterUserPassword"
                            }
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_DB_HOST=",
                            {
                              "Fn::ImportValue": {
                                "Ref": "DBEndpointExport"
                              }
                            }
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_DB_PORT=",
                            {
                              "Fn::ImportValue": {
                                "Ref": "DBPortExport"
                              }
                            }
                          ]
                        ]
                      },
                      "ATL_JDBC_DRIVER=org.postgresql.Driver",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_JDBC_URL=jdbc:postgresql://",
                            {
                              "Fn::ImportValue": {
                                "Ref": "DBEndpointExport"
                              }
                            },
                            ":",
                            {
                              "Fn::ImportValue": {
                                "Ref": "DBPortExport"
                              }
                            },
                            "/atljira"
                          ]
                        ]
                      },
                      "ATL_JDBC_USER=atljira",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_JDBC_PASSWORD=",
                            {
                              "Ref": "DBPassword"
                            }
                          ]
                        ]
                      },
                      "ATL_ENABLED_PRODUCTS=Jira",
                      "ATL_ENABLED_SHARED_HOMES=",
                      "ATL_JIRA_NAME=jira-software",
                      "ATL_JIRA_SHORT_DISPLAY_NAME=\"JIRA SW\"",
                      "ATL_JIRA_FULL_DISPLAY_NAME=\"Atlassian JIRA Software\"",
                      "ATL_JIRA_INSTALL_DIR=/opt/atlassian/jira",
                      "ATL_JIRA_USER=\"jira\"",
                      "ATL_JIRA_CONFIG_PROPERTIES=",
                      "ATL_JIRA_DB_NAME=\"atljira\"",
                      "ATL_JIRA_DB_USER=\"atljira\"",
                      "ATL_JIRA_HOME=\"/var/atlassian/application-data/jira\"",
                      "ATL_JIRA_NGINX_PATH=/",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_JIRA_VERSION=",
                            {
                              "Ref": "Version"
                            }
                          ]
                        ]
                      },
                      "ATL_POSTGRES_ENABLED=false",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_PROXY_NAME=",
                            {
                              "Fn::If": [
                                "UseCustomDnsName",
                                {
                                  "Ref": "CustomDnsName"
                                },
                                {
                                  "Fn::If": [
                                    "BitbucketProduct",
                                    {
                                      "Fn::GetAtt": [
                                        "LoadBalancer",
                                        "DNSName"
                                      ]
                                    },
                                    {
                                      "Fn::GetAtt": [
                                        "MainLoadBalancer",
                                        "DNSName"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      },
                      "ATL_SSL_SELF_CERT_ENABLED=false",
                      {
                        "Fn::If": [
                          "DoSSL",
                          "ATL_SSL_PROXY=true",
                          {
                            "Ref": "AWS::NoValue"
                          }
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_SSLKeystorePassword=",
                            {
                              "Ref": "SSLKeystorePassword"
                            }
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_SSLKeystoreBucket=",
                            {
                              "Ref": "SSLKeystoreBucket"
                            }
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_SSLKeystore=",
                            {
                              "Ref": "SSLKeystore"
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                }
              }
            },
            "commands": {
              "10_fetch_init_jira": {
                "command": "curl https://raw.githubusercontent.com/pclermont/atl-aws-template/master/init.d/atl-init-jira.sh >> /tmp/atl-init-jira.sh",
                "ignoreErrors": "false"
              },
              "11_chmod_init_jira": {
                "command": "chmod 755 /tmp/atl-init-jira.sh && chown root:root /tmp/atl-init-jira.sh && mv /tmp/atl-init-jira.sh /etc/init.d/atl-init-jira",
                "ignoreErrors": "false"
              },
              "040_make_shared_home_dir": {
                "command": "mkdir -p /media/atl/jira/shared",
                "ignoreErrors": "false"
              }
            }
          },
          "Confluence": {
            "files": {
              "/etc/atl": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_SYNCHRONY_SERVICE_URL=",
                            {
                              "Fn::Sub": [
                                "${Protocol}://${LoadBalancerName}/synchrony/v1",
                                {
                                  "Protocol": {
                                    "Fn::If": [
                                      "DoSSL",
                                      "https",
                                      "http"
                                    ]
                                  },
                                  "LoadBalancerName": {
                                    "Fn::If": [
                                      "ConfluenceProduct",
                                      {
                                        "Ref": "CustomDnsName"
                                      },
                                      ""
                                    ]
                                  }
                                }
                              ]
                            }
                          ]
                        ]
                      },
                      "ATL_APP_DATA_MOUNT_ENABLED=false",
                      "ATL_SYNCHRONY_WAITING_CONFIG_TIME=20",
                      "ATL_SYNCHRONY_STACK_SPACE=-Xss2048k",
                      "ATL_SYNCHRONY_MEMORY=-Xmx2g",
                      "ATL_DB_NAME=confluence",
                      "ATL_DB_USER=confluence",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_DB_PASSWORD=",
                            {
                              "Ref": "DBMasterUserPassword"
                            }
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_DB_HOST=",
                            {
                              "Fn::ImportValue": {
                                "Ref": "DBEndpointExport"
                              }
                            }
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_DB_PORT=",
                            {
                              "Fn::ImportValue": {
                                "Ref": "DBPortExport"
                              }
                            }
                          ]
                        ]
                      },
                      "ATL_JDBC_DRIVER=org.postgresql.Driver",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_JDBC_URL=jdbc:postgresql://",
                            {
                              "Fn::ImportValue": {
                                "Ref": "DBEndpointExport"
                              }
                            },
                            ":",
                            {
                              "Fn::ImportValue": {
                                "Ref": "DBPortExport"
                              }
                            },
                            "/confluence"
                          ]
                        ]
                      },
                      "ATL_JDBC_USER=confluence",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_JDBC_PASSWORD=",
                            {
                              "Ref": "DBPassword"
                            }
                          ]
                        ]
                      },
                      "ATL_ENABLED_PRODUCTS=Confluence",
                      "ATL_ENABLED_SHARED_HOMES=",
                      "ATL_CONFLUENCE_NAME=confluence",
                      "ATL_CONFLUENCE_SHORT_DISPLAY_NAME=\"Confluence\"",
                      "ATL_CONFLUENCE_FULL_DISPLAY_NAME=\"Atlassian Confluence\"",
                      "ATL_CONFLUENCE_USER=confluence",
                      "ATL_CONFLUENCE_CONFIG_PROPERTIES=",
                      "ATL_CONFLUENCE_DB_NAME=\"confluence\"",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_CONFLUENCE_VERSION=",
                            {
                              "Ref": "Version"
                            }
                          ]
                        ]
                      },
                      "ATL_CONFLUENCE_DB_USER=\"confluence\"",
                      "ATL_CONFLUENCE_INSTALL_DIR=/opt/atlassian/confluence",
                      "ATL_CONFLUENCE_HOME=\"/var/atlassian/application-data/confluence\"",
                      "ATL_CONFLUENCE_NGINX_PATH=/",
                      "ATL_POSTGRES_ENABLED=false",
                      "ATL_CONFLUENCE_DATA_CENTER=true",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_HAZELCAST_NETWORK_AWS_IAM_ROLE=",
                            {
                              "Fn::If": [
                                "ConfluenceProduct",
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:aws:iam::",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":role/confluence-instances"
                                    ]
                                  ]
                                },
                                ""
                              ]
                            }
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_HAZELCAST_NETWORK_AWS_IAM_REGION=",
                            {
                              "Ref": "AWS::Region"
                            }
                          ]
                        ]
                      },
                      "ATL_HAZELCAST_NETWORK_AWS_TAG_KEY=Cluster",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_HAZELCAST_NETWORK_AWS_TAG_VALUE=",
                            {
                              "Ref": "AWS::StackName"
                            }
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_PROXY_NAME=",
                            {
                              "Fn::If": [
                                "UseCustomDnsName",
                                {
                                  "Ref": "CustomDnsName"
                                },
                                {
                                  "Fn::If": [
                                    "BitbucketProduct",
                                    {
                                      "Fn::GetAtt": [
                                        "LoadBalancer",
                                        "DNSName"
                                      ]
                                    },
                                    {
                                      "Fn::GetAtt": [
                                        "MainLoadBalancer",
                                        "DNSName"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      },
                      "ATL_SSL_SELF_CERT_ENABLED=false",
                      {
                        "Fn::If": [
                          "DoSSL",
                          "ATL_SSL_PROXY=true",
                          {
                            "Ref": "AWS::NoValue"
                          }
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_AWS_STACK_NAME=",
                            {
                              "Ref": "AWS::StackName"
                            }
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_SSLKeystorePassword=",
                            {
                              "Ref": "SSLKeystorePassword"
                            }
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_SSLKeystoreBucket=",
                            {
                              "Ref": "SSLKeystoreBucket"
                            }
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "ATL_SSLKeystore=",
                            {
                              "Ref": "SSLKeystore"
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                }
              }
            },
            "commands": {
              "10_fetch_init_confluence": {
                "command": "curl https://raw.githubusercontent.com/pclermont/atl-aws-template/master/init.d/atl-init-confluence.sh >> /tmp/atl-init-confluence.sh",
                "ignoreErrors": "false"
              },
              "11_chmod_init_confluence": {
                "command": "chmod 755 /tmp/atl-init-confluence.sh && chown root:root /tmp/atl-init-confluence.sh && mv /tmp/atl-init-confluence.sh /etc/init.d/atl-init-confluence",
                "ignoreErrors": "false"
              },
              "20_fetch_init_confluence_common": {
                "command": "curl https://raw.githubusercontent.com/pclermont/atl-aws-template/master/init.d/atl-confluence-common  >> /tmp/atl-confluence-common",
                "ignoreErrors": "false"
              },
              "21_chmod_init_confluence_common": {
                "command": "chmod 755 /tmp/atl-confluence-common && chown root:root /tmp/atl-confluence-common && mv /tmp/atl-confluence-common /etc/init.d/atl-confluence-common",
                "ignoreErrors": "false"
              },
              "040_make_shared_home_dir": {
                "command": "mkdir -p /media/atl/confluence/shared",
                "ignoreErrors": "false"
              }
            }
          },
          "startservices": {
            "commands": {
              "20_init_volume": {
                "command": "/etc/init.d/atl-init-10-volume start",
                "ignoreErrors": "false"
              },
              "30_init_instance_store": {
                "command": "/etc/init.d/atl-init-20-instance-store start",
                "ignoreErrors": "false"
              },
              "40_init_products": {
                "command": "/etc/init.d/atl-init-40-products start",
                "ignoreErrors": "false"
              }
            }
          }
        }
      },
      "Properties": {
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": "50",
              "VolumeType": "gp2",
              "DeleteOnTermination": "true"
            }
          }
        ],
        "IamInstanceProfile": {
          "Fn::If": [
            "NotJiraProduct",
            {
              "Fn::Join": [
                "",
                [
                  "arn:aws:iam::",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":instance-profile/confluence-instances"
                ]
              ]
            },
            {
              "Fn::Join": [
                "",
                [
                  "arn:aws:iam::",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":instance-profile/default-instances"
                ]
              ]
            }
          ]
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": {
          "Ref": "AMIid"
        },
        "InstanceType": {
          "Ref": "ClusterNodeInstanceType"
        },
        "SecurityGroups": [
          {
            "Ref": "AppSecurityGroup"
          },
          {
            "Fn::ImportValue": {
              "Ref": "DBSecurityGroupExport"
            }
          },
          {
            "Fn::ImportValue": {
              "Ref": "EFSSecurityGroupExport"
            }
          },
          {
            "Fn::ImportValue": "SecurityGroup-MgmtSecuritySG"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                "#!/bin/bash -xe",
                "yum update -y aws-cfn-bootstrap",
                {
                  "Fn::Join": [
                    " ",
                    [
                      "/opt/aws/bin/cfn-init -v",
                      "--stack",
                      {
                        "Ref": "AWS::StackName"
                      },
                      "--resource ClusterNodeLaunchConfig",
                      "--region",
                      {
                        "Ref": "AWS::Region"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    " ",
                    [
                      "/opt/aws/bin/cfn-signal -e $?",
                      "--stack",
                      {
                        "Ref": "AWS::StackName"
                      },
                      "--resource ClusterNodeGroup",
                      "--region",
                      {
                        "Ref": "AWS::Region"
                      }
                    ]
                  ]
                }
              ]
            ]
          }
        }
      }
    },
    "LoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Condition": "BitbucketProduct",
      "Properties": {
        "AppCookieStickinessPolicy": [
          {
            "CookieName": "JSESSIONID",
            "PolicyName": "JSessionIdStickiness"
          }
        ],
        "ConnectionDrainingPolicy": {
          "Enabled": true,
          "Timeout": 300
        },
        "ConnectionSettings": {
          "IdleTimeout": 3600
        },
        "CrossZone": "true",
        "Listeners": [
          {
            "LoadBalancerPort": "80",
            "Protocol": "HTTP",
            "InstancePort": "8080",
            "InstanceProtocol": "HTTP",
            "PolicyNames": [
              "JSessionIdStickiness"
            ]
          },
          {
            "Fn::If": [
              "DoSSL",
              {
                "LoadBalancerPort": "443",
                "Protocol": "HTTPS",
                "InstancePort": "8080",
                "InstanceProtocol": "HTTP",
                "PolicyNames": [
                  "JSessionIdStickiness"
                ],
                "SSLCertificateId": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:acm:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":certificate/",
                      {
                        "Ref": "SSLCertificateId"
                      }
                    ]
                  ]
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          }
        ],
        "HealthCheck": {
          "Target": "TCP:8080",
          "Timeout": "29",
          "Interval": "30",
          "UnhealthyThreshold": "2",
          "HealthyThreshold": "2"
        },
        "Scheme": "internal",
        "SecurityGroups": [
          {
            "Ref": "LBSecurityGroup"
          }
        ],
        "Subnets": {
          "Ref": "Subnets"
        },
        "Tags": [
          {
            "Key": "application",
            "Value": {
              "Ref": "AtlassianProduct"
            }
          },
          {
            "Key": "environment",
            "Value": {
              "Fn::FindInMap": [
                "EnvironmentLookups",
                "EnvNameToPretty",
                {
                  "Ref": "EnvironmentName"
                }
              ]
            }
          },
          {
            "Key": "MonitoringProfile",
            "Value": {
              "Ref": "AtlassianProduct"
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "EnvironmentName"
                  },
                  {
                    "Fn::FindInMap": [
                      "ProductNameLowerCase",
                      "Product",
                      {
                        "Ref": "AtlassianProduct"
                      }
                    ]
                  },
                  "elb",
                  {
                    "Ref": "StackId"
                  }
                ]
              ]
            }
          },
          {
            "Key": "stackId",
            "Value": {
              "Ref": "StackId"
            }
          }
        ]
      }
    },
    "AppSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group allowing SSH and HTTP/HTTPS access",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "AdminNetwork"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "SourceSecurityGroupId": {
              "Ref": "LBSecurityGroup"
            }
          }
        ],
        "Tags": [
          {
            "Key": "application",
            "Value": {
              "Ref": "AtlassianProduct"
            }
          },
          {
            "Key": "environment",
            "Value": {
              "Fn::FindInMap": [
                "EnvironmentLookups",
                "EnvNameToPretty",
                {
                  "Ref": "EnvironmentName"
                }
              ]
            }
          },
          {
            "Key": "MonitoringProfile",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AtlassianProduct"
                  },
                  "SG"
                ]
              ]
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "APPSG"
                ]
              ]
            }
          },
          {
            "Key": "stackId",
            "Value": {
              "Ref": "StackId"
            }
          }
        ]
      }
    },
    "LBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group allowing SSH and HTTP/HTTPS access",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "AdminNetwork"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "application",
            "Value": {
              "Ref": "AtlassianProduct"
            }
          },
          {
            "Key": "environment",
            "Value": {
              "Fn::FindInMap": [
                "EnvironmentLookups",
                "EnvNameToPretty",
                {
                  "Ref": "EnvironmentName"
                }
              ]
            }
          },
          {
            "Key": "MonitoringProfile",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AtlassianProduct"
                  },
                  "SG"
                ]
              ]
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "ELBSG"
                ]
              ]
            }
          },
          {
            "Key": "stackId",
            "Value": {
              "Ref": "StackId"
            }
          }
        ]
      }
    },
    "AppSecurityGroupIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AppSecurityGroup"
        },
        "IpProtocol": "-1",
        "FromPort": "-1",
        "ToPort": "-1",
        "SourceSecurityGroupId": {
          "Ref": "AppSecurityGroup"
        }
      }
    },
    "MainLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Condition": "NotBitbucketProduct",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "idle_timeout.timeout_seconds",
            "Value": "300"
          }
        ],
        "Scheme": "internal",
        "Subnets": {
          "Ref": "Subnets"
        },
        "SecurityGroups": [
          {
            "Ref": "LBSecurityGroup"
          }
        ],
        "Tags": [
          {
            "Key": "application",
            "Value": {
              "Ref": "AtlassianProduct"
            }
          },
          {
            "Key": "environment",
            "Value": {
              "Fn::FindInMap": [
                "EnvironmentLookups",
                "EnvNameToPretty",
                {
                  "Ref": "EnvironmentName"
                }
              ]
            }
          },
          {
            "Key": "MonitoringProfile",
            "Value": {
              "Ref": "AtlassianProduct"
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "EnvironmentName"
                  },
                  {
                    "Fn::FindInMap": [
                      "ProductNameLowerCase",
                      "Product",
                      {
                        "Ref": "AtlassianProduct"
                      }
                    ]
                  },
                  "alb",
                  {
                    "Ref": "StackId"
                  }
                ]
              ]
            }
          },
          {
            "Key": "stackId",
            "Value": {
              "Ref": "StackId"
            }
          }
        ]
      }
    },
    "MainLoadBalancerListener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Condition": "NotBitbucketProduct",
      "Properties": {
        "Certificates": [
          {
            "CertificateArn": {
              "Fn::If": [
                "DoSSL",
                {
                  "Fn::Sub": [
                    "arn:aws:acm:${Region}:${AccountId}:certificate/${SSLCertificateId}",
                    {
                      "AccountId": {
                        "Ref": "AWS::AccountId"
                      },
                      "Region": {
                        "Ref": "AWS::Region"
                      },
                      "SSLCertificateId": {
                        "Ref": "SSLCertificateId"
                      }
                    }
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          }
        ],
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": {
              "Ref": "MainTargetGroup"
            }
          }
        ],
        "LoadBalancerArn": {
          "Ref": "MainLoadBalancer"
        },
        "Port": {
          "Fn::If": [
            "DoSSL",
            "443",
            "80"
          ]
        },
        "Protocol": {
          "Fn::If": [
            "DoSSL",
            "HTTPS",
            "HTTP"
          ]
        }
      }
    },
    "MainTargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Condition": "NotBitbucketProduct",
      "DependsOn": "MainLoadBalancer",
      "Properties": {
        "Port": "8080",
        "Protocol": "HTTP",
        "VpcId": {
          "Ref": "VPC"
        },
        "HealthCheckIntervalSeconds": "30",
        "HealthCheckTimeoutSeconds": "10",
        "HealthyThresholdCount": "4",
        "Matcher": {
          "HttpCode": "200"
        },
        "HealthCheckPath": "/status",
        "HealthCheckPort": "8080",
        "HealthCheckProtocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "true"
          },
          {
            "Key": "stickiness.type",
            "Value": "lb_cookie"
          }
        ],
        "Tags": [
          {
            "Key": "Cluster",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "application",
            "Value": {
              "Ref": "AtlassianProduct"
            }
          },
          {
            "Key": "environment",
            "Value": {
              "Fn::FindInMap": [
                "EnvironmentLookups",
                "EnvNameToPretty",
                {
                  "Ref": "EnvironmentName"
                }
              ]
            }
          },
          {
            "Key": "MonitoringProfile",
            "Value": {
              "Ref": "AtlassianProduct"
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "EnvironmentName"
                  },
                  {
                    "Fn::FindInMap": [
                      "ProductNameLowerCase",
                      "Product",
                      {
                        "Ref": "AtlassianProduct"
                      }
                    ]
                  },
                  {
                    "Ref": "StackId"
                  }
                ]
              ]
            }
          },
          {
            "Key": "stackId",
            "Value": {
              "Ref": "StackId"
            }
          }
        ]
      }
    }
  }
}
